# Generated by Django 4.1.3 on 2023-02-12 10:15

import ckeditor.fields
import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=160, verbose_name='recipe title')),
                ('title_ru', models.CharField(max_length=160, null=True, verbose_name='recipe title')),
                ('title_en', models.CharField(max_length=160, null=True, verbose_name='recipe title')),
                ('text', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='recipe text')),
                ('text_ru', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='recipe text')),
                ('text_en', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='recipe text')),
                ('cooking_time', models.PositiveIntegerField(default=0, verbose_name='cooking time')),
                ('photo', models.ImageField(upload_to='media/%Y/%m/%d', verbose_name='recipe photo')),
                ('serving', models.PositiveIntegerField(default=0, verbose_name='serving')),
                ('published_at', models.DateField(auto_now_add=True, verbose_name='published at')),
                ('edited_at', models.DateField(auto_now=True, verbose_name='edited at')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='views count')),
                ('slug', models.SlugField(blank=True, default=None, max_length=150, null=True, unique=True, verbose_name='slug')),
                ('is_published', models.BooleanField(default=True)),
                ('ingredients', ckeditor.fields.RichTextField(verbose_name='ingredients')),
                ('ingredients_ru', ckeditor.fields.RichTextField(null=True, verbose_name='ingredients')),
                ('ingredients_en', ckeditor.fields.RichTextField(null=True, verbose_name='ingredients')),
                ('cooking_instructions', ckeditor.fields.RichTextField(verbose_name='coking instructions')),
                ('cooking_instructions_ru', ckeditor.fields.RichTextField(null=True, verbose_name='coking instructions')),
                ('cooking_instructions_en', ckeditor.fields.RichTextField(null=True, verbose_name='coking instructions')),
            ],
            options={
                'verbose_name': 'recipe',
                'verbose_name_plural': 'recipes',
                'db_table': 'recipe',
                'ordering': ('-published_at',),
            },
        ),
        migrations.CreateModel(
            name='RecipeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='category name')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'db_table': 'recipe_category',
            },
        ),
        migrations.CreateModel(
            name='RecipeCountViews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(db_index=True, max_length=150)),
                ('recipe_id', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_blog.recipe')),
            ],
        ),
        migrations.AddField(
            model_name='recipe',
            name='heading',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_blog.recipecategory', verbose_name='heading'),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=56, verbose_name='first name')),
                ('first_name_ru', models.CharField(max_length=56, null=True, verbose_name='first name')),
                ('first_name_en', models.CharField(max_length=56, null=True, verbose_name='first name')),
                ('last_name', models.CharField(max_length=56, verbose_name='last_name')),
                ('last_name_ru', models.CharField(max_length=56, null=True, verbose_name='last_name')),
                ('last_name_en', models.CharField(max_length=56, null=True, verbose_name='last_name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='email')),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True, verbose_name='username')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='media/images/profile/', verbose_name='photo')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name_plural': 'profile',
                'db_table': 'profile',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=1500, verbose_name='comment')),
                ('text_ru', models.TextField(max_length=1500, null=True, verbose_name='comment')),
                ('text_en', models.TextField(max_length=1500, null=True, verbose_name='comment')),
                ('published_at', models.DateField(auto_now_add=True, verbose_name='published at')),
                ('is_published', models.BooleanField(default=True)),
                ('recipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_recipe', to='app_blog.recipe')),
                ('user', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
                'db_table': 'comment',
            },
        ),
    ]
